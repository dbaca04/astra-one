---
export const prerender = false;
import AdminLayout from "../../layouts/AdminLayout.astro";

interface ApiResponse {
    message?: string;
    error?: string;
    details?: string;
}

let message = Astro.url.searchParams.get("message");
let error = Astro.url.searchParams.get("error");

if (Astro.request.method === "POST") {
    try {
        const formData = await Astro.request.formData();
        const topic = formData.get("topic");

        if (!topic || typeof topic !== "string") {
            error = "Topic is required and must be a string.";
        } else {
            // Call the new Astro API endpoint
            try {
                // Construct absolute URL for SSR fetch
                const origin = Astro.request.headers.get("origin") || `http://localhost:${import.meta.env.PORT || 4321}`;
                const apiUrl = `${origin}/api/generate-content`;
                const response = await fetch(
                    apiUrl,
                    {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json",
                        },
                        body: JSON.stringify({ topic }),
                    },
                );

                let result: ApiResponse | undefined;
                let rawText: string | undefined;
                try {
                    rawText = await response.text();
                    result = JSON.parse(rawText);
                } catch (jsonErr) {
                    console.error("Non-JSON response from /api/generate-content:", rawText);
                    error = `Unexpected response from API (not valid JSON). Status: ${response.status}`;
                    result = undefined;
                }

                if (response.ok && result) {
                    message = result.message || "Content generation process started successfully.";
                } else {
                    error = (result && result.error) || `Failed to start content generation. Status: ${response.status}`;
                    if (result && result.details) error += ` Details: ${result.details}`;
                }
            } catch (fetchErr: any) {
                console.error("Fetch error calling /api/generate-content:", fetchErr);
                error = "Could not reach the content generation API: " + (fetchErr.message || fetchErr);
            }
        }
    } catch (e) {
        console.error("Error triggering workflow:", e);
        error =
            "An unexpected error occurred while triggering the workflow: " +
            e.message;
    }
    // Redirect to GET to clear form resubmission and show message/error
    return Astro.redirect(
        `/admin/trigger?message=${encodeURIComponent(message || "")}&error=${encodeURIComponent(error || "")}`,
        303,
    );
}
---

<AdminLayout title="Manual Workflow Trigger">
    <h1 class="text-3xl font-bold mb-6">Manual Workflow Trigger</h1>
    <p class="mb-6 text-theme-text opacity-80">
        Manually start the AI content generation workflow by providing a topic.
    </p>

    {
        message && (
            <div class="mb-4 p-4 bg-green-500 bg-opacity-20 text-green-700 dark:text-green-300 rounded-md">
                {message}
            </div>
        )
    }
    {
        error && (
            <div class="mb-4 p-4 bg-red-500 bg-opacity-20 text-red-700 dark:text-red-300 rounded-md">
                {error}
            </div>
        )
    }

    <form method="POST" class="bg-theme-card-bg p-6 rounded-lg shadow-md">
        <div class="mb-4">
            <label
                for="topic"
                class="block text-sm font-medium text-theme-text mb-1"
                >Blog Post Topic</label
            >
            <input
                type="text"
                id="topic"
                name="topic"
                required
                class="w-full px-3 py-2 border border-theme-border rounded-md shadow-sm focus:outline-none focus:ring-theme-accent focus:border-theme-accent bg-theme-bg"
                placeholder="e.g., Latest Trends in AI Development"
            />
        </div>
        <button
            type="submit"
            class="w-full bg-theme-accent text-theme-bg py-2 px-4 rounded-md hover:bg-theme-accent-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-theme-accent"
        >
            Generate Content
        </button>
    </form>
</AdminLayout>
