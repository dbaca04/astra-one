---
import type { Page, GetStaticPathsOptions } from "astro";
import type { CollectionEntry } from "astro:content";
import BaseHead from "../../components/BaseHead.astro";
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";
import { getCollection } from "astro:content";
import FormattedDate from "../../components/FormattedDate.astro";
import { Picture } from "astro:assets";
import PaginationControls from "../../components/PaginationControls.astro";

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
    const allPosts = await getCollection("blog");
    allPosts.sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());
    const pageSize = 10; // Define page size
    return paginate(allPosts, { pageSize });
}

interface Props {
    page: Page<CollectionEntry<"blog">>;
}

const { page } = Astro.props as Props;

// Determine current page number for unique titles/descriptions if needed
const currentPageNumber =
    page && page.currentPage > 1 ? `Page ${page.currentPage}` : "";
const title =
    `Blog ${currentPageNumber ? `- ${currentPageNumber}` : ""}`.trim();
const description =
    `All blog posts ${currentPageNumber ? `- ${currentPageNumber}` : ""}`.trim();

const prevUrl = page?.url.prev;
const nextUrl = page?.url.next;
---

<html lang="en">
    <head>
        <BaseHead title={title} description={description} />
        {/* SEO Link Tags for Pagination */}
        {prevUrl && <link rel="prev" href={prevUrl} />}
        {nextUrl && <link rel="next" href={nextUrl} />}
    </head>
    <body class="bg-theme-bg text-theme-text flex flex-col min-h-screen">
        <Header />
        <main class="w-full max-w-screen-xl mx-auto p-4 flex-grow">
            <section class="py-8">
                <h1
                    class="text-4xl font-bold text-theme-text mb-8 text-center md:text-left"
                >
                    Blog
                </h1>
                <ul class="grid grid-cols-1 md:grid-cols-2 gap-8">
                    {
                        page?.data?.length > 0 ? (
                            page.data.map((post) => {
                                const postSlug = post.data.slug || post.id;
                                const imageSource = post.data.heroImage;

                                return (
                                    <li class="bg-theme-card-bg rounded-lg shadow-lg overflow-hidden transition-shadow duration-300 hover:shadow-xl">
                                        <a
                                            href={`/blog/${postSlug}/`}
                                            class="block group"
                                        >
                                            {imageSource && (
                                                <Picture
                                                    src={imageSource}
                                                    alt={post.data.title}
                                                    width={720}
                                                    height={360}
                                                    formats={[
                                                        "avif",
                                                        "webp",
                                                        "jpeg",
                                                    ]}
                                                    quality={80}
                                                    sizes="(max-width: 720px) 100vw, (max-width: 1024px) 50vw, 720px"
                                                    fit="cover"
                                                    position="center"
                                                    class="w-full h-48 object-cover transition-transform duration-300 group-hover:scale-105"
                                                />
                                            )}
                                            <div class="p-6">
                                                <h4 class="text-xl font-semibold text-theme-text mb-2 group-hover:text-theme-accent transition-colors duration-200">
                                                    {post.data.title}
                                                </h4>
                                                <p class="text-sm text-theme-text opacity-80 group-hover:text-theme-accent transition-colors duration-200">
                                                    <FormattedDate
                                                        date={post.data.date}
                                                    />
                                                </p>
                                                {post.data.description && (
                                                    <p class="text-sm text-theme-text opacity-90 mt-2 mb-3 group-hover:text-theme-accent-hover transition-colors duration-200">
                                                        {post.data.description}
                                                    </p>
                                                )}
                                                {post.data.tags &&
                                                    post.data.tags.length >
                                                        0 && (
                                                        <div class="mt-2 flex flex-wrap gap-2">
                                                            {post.data.tags.map(
                                                                (
                                                                    tag: string,
                                                                ) => (
                                                                    <a
                                                                        href={`/tags/${tag}`}
                                                                        class="text-xs bg-theme-accent text-theme-accent-text px-2 py-1 rounded-full hover:bg-theme-accent-hover transition-colors duration-200"
                                                                    >
                                                                        {tag}
                                                                    </a>
                                                                ),
                                                            )}
                                                        </div>
                                                    )}
                                            </div>
                                        </a>
                                    </li>
                                );
                            })
                        ) : (
                            <p>No blog posts found.</p>
                        )
                    }
                </ul>
                {page && <PaginationControls page={page} />}
            </section>
        </main>
        <Footer />
    </body>
</html>
