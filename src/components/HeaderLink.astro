---
import type { HTMLAttributes } from "astro/types";

type Props = HTMLAttributes<"a">;

const { href, class: className, ...props } = Astro.props;
const pathname = Astro.url.pathname.replace(import.meta.env.BASE_URL, "");
const subpath = pathname.match(/[^\/]+/g);
const isActive = href === pathname || href === "/" + (subpath?.[0] || "");
---

<a href={href} class:list={[className, { active: isActive }]} {...props}>
	<slot />
</a>
<style>
	a {
		display: inline-block;
		text-decoration: none;
		padding: 0.5rem 0.75rem;
		color: var(--theme-header-text);
		font-weight: 500;
		transition: all 0.2s ease;
		position: relative;
		border-radius: 4px;
	}

	a:hover,
	a:focus {
		color: var(--theme-accent);
		background-color: var(--theme-selection-bg);
	}

	a:focus-visible {
		outline: 2px solid var(--theme-accent);
		outline-offset: 2px;
	}

	a.active {
		font-weight: 700;
		color: var(--theme-accent);
	}

	@media (min-width: calc(var(--tablet) + 1px)) {
		a.active::after {
			content: "";
			position: absolute;
			bottom: -4px;
			left: 0.75rem;
			right: 0.75rem;
			height: 3px;
			background-color: var(--theme-accent);
			border-radius: 3px 3px 0 0;
		}
	}
</style>
