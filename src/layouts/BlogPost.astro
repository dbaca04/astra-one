---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import { Picture } from "astro:assets";

type Props = CollectionEntry<"blog">["data"] & { tags?: string[] };

const { title, description, pubDate, updatedDate, heroImage, image, tags } =
	Astro.props;

// Use heroImage or fallback to image property
const displayImage = heroImage || image;
---

<html lang="en">
	<head>
		<BaseHead title={title} description={description} />
		<style>
			main {
				width: calc(100% - 2em);
				max-width: 100%;
				margin: 0;
			}
			.hero-image {
				width: 100%;
				max-height: 70vh;
				overflow: hidden;
				margin-bottom: 2em;
			}
			.hero-image img {
				display: block;
				margin: 0 auto;
				border-radius: 12px;
				box-shadow: var(--box-shadow);
			}
			.prose {
				width: 720px;
				max-width: calc(100% - 2em);
				margin: auto;
				padding: 1em;
				color: rgb(var(--gray-dark));
				font-size: 1.05em;
				line-height: 1.75;
			}
			.prose :global(h2) {
				margin-top: 2em;
				margin-bottom: 0.5em;
			}
			.prose :global(h3) {
				margin-top: 1.5em;
				margin-bottom: 0.5em;
			}
			.prose :global(img) {
				margin: 2em auto;
				border-radius: 8px;
				box-shadow: 0 2px 6px rgba(var(--gray), 20%);
			}
			.prose :global(pre) {
				border-radius: 8px;
				padding: 1.2em 1.4em;
				margin: 1.5em 0 2em;
				background-color: var(--code-bg);
				color: var(--code-fg);
			}
			.prose :global(blockquote) {
				margin: 2em 0;
				padding: 1.5em 2em;
				background: var(--blockquote-bg);
				border-radius: 8px;
				font-style: italic;
				line-height: 1.6;
			}
			.prose :global(ul),
			.prose :global(ol) {
				margin: 1em 0 2em 2em;
			}
			.prose :global(li) {
				margin-bottom: 0.5em;
				line-height: 1.6;
			}
			.title {
				margin-bottom: 1.5em;
				padding: 1em 0;
				text-align: center;
				line-height: 1.2;
			}
			.title h1 {
				margin: 0 0 0.5em 0;
				letter-spacing: -0.02em;
			}
			.date {
				margin-bottom: 0.5em;
				color: rgb(var(--gray));
				font-size: 0.9em;
			}
			.last-updated-on {
				font-style: italic;
			}
			.tags {
				margin-top: 1.2em;
				font-size: 0.9em;
				color: rgb(var(--gray));
				display: flex;
				flex-wrap: wrap;
				gap: 0.5em;
				justify-content: center;
			}
			.tags span {
				display: inline-block;
				padding: 0.2em 0.6em;
				background-color: rgba(var(--gray-light), 70%);
				border-radius: 4px;
			}
		</style>
	</head>

	<body>
		<Header />
		<main>
			<article>
				<div class="hero-image">
					{
						displayImage && (
							<Picture
								src={displayImage}
								alt={title}
								width={1020}
								height={510}
								formats={["avif", "webp", "jpeg"]}
								quality={80}
								sizes="(max-width: 720px) 100vw, 1020px"
								fit="cover"
								position="center"
								layout="constrained"
							/>
						)
					}
				</div>
				<div class="prose">
					<div class="title">
						<div class="date">
							<FormattedDate date={pubDate} />
							{
								updatedDate && (
									<div class="last-updated-on">
										Last updated on{" "}
										<FormattedDate date={updatedDate} />
									</div>
								)
							}
						</div>
						<h1>{title}</h1>
						<hr />
						{
							tags && tags.length > 0 && (
								<div class="tags">
									{tags.map((tag) => (
										<span>#{tag}</span>
									))}
								</div>
							)
						}
					</div>
					<slot />
				</div>
			</article>
		</main>
		<Footer />
	</body>
</html>
