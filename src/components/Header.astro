---
import HeaderLink from "./HeaderLink.astro";
import Nav from "./Nav.astro";
import MobileNav from "./MobileNav.astro";
import { SITE_TITLE } from "../consts";
---

<header>
	<nav>
		<h2><a href="/">{SITE_TITLE}</a></h2>
		<div class="desktop-nav hide-on-mobile">
			<Nav />
		</div>
		<MobileNav />
		<div class="theme-toggle hide-on-mobile">
			<button id="theme-toggle" aria-label="Toggle Dark Mode">
				<svg
					class="sun-icon"
					xmlns="http://www.w3.org/2000/svg"
					width="24"
					height="24"
					viewBox="0 0 24 24"
					fill="none"
					stroke="currentColor"
					stroke-width="2"
					stroke-linecap="round"
					stroke-linejoin="round"
				>
					<circle cx="12" cy="12" r="5"></circle>
					<line x1="12" y1="1" x2="12" y2="3"></line>
					<line x1="12" y1="21" x2="12" y2="23"></line>
					<line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
					<line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
					<line x1="1" y1="12" x2="3" y2="12"></line>
					<line x1="21" y1="12" x2="23" y2="12"></line>
					<line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
					<line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
				</svg>
				<svg
					class="moon-icon"
					xmlns="http://www.w3.org/2000/svg"
					width="24"
					height="24"
					viewBox="0 0 24 24"
					fill="none"
					stroke="currentColor"
					stroke-width="2"
					stroke-linecap="round"
					stroke-linejoin="round"
				>
					<path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"
					></path>
				</svg>
			</button>
		</div>
	</nav>
</header>

<!-- Theme Toggle Script -->
<script is:inline>
	// Initialize theme based on user preferences
	function initializeTheme() {
		const theme = (() => {
			if (
				typeof localStorage !== "undefined" &&
				localStorage.getItem("theme")
			) {
				return localStorage.getItem("theme");
			}
			if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
				return "dark";
			}
			return "light";
		})();

		if (theme === "light") {
			document.documentElement.classList.remove("dark");
			document.documentElement.classList.add("light");
		} else {
			document.documentElement.classList.add("dark");
			document.documentElement.classList.remove("light");
		}

		window.localStorage.setItem("theme", theme);

		// Update toggle button state
		const toggleButton = document.getElementById("theme-toggle");
		if (toggleButton) {
			toggleButton.setAttribute(
				"aria-pressed",
				theme === "dark" ? "true" : "false",
			);
		}
	}

	// Set up toggle functionality
	function setupThemeToggle() {
		const toggleButton = document.getElementById("theme-toggle");
		if (toggleButton) {
			toggleButton.addEventListener("click", () => {
				const isDark =
					document.documentElement.classList.contains("dark");
				document.documentElement.classList.toggle("dark");
				document.documentElement.classList.toggle("light");

				localStorage.setItem("theme", isDark ? "light" : "dark");
				toggleButton.setAttribute(
					"aria-pressed",
					!isDark ? "true" : "false",
				);
			});
		}
	}

	// Run on page load
	initializeTheme();
	document.addEventListener("DOMContentLoaded", setupThemeToggle);

	// Also run on Astro page transitions
	document.addEventListener("astro:page-load", () => {
		initializeTheme();
		setupThemeToggle();
	});
</script>

<style>
	header {
		margin: 0;
		padding: 0 1em;
		background: var(--theme-header-bg);
		box-shadow: var(--box-shadow-small);
		transition: var(--theme-transition);
	}
	h2 {
		margin: 0;
		font-size: 1em;
	}

	h2 a,
	h2 a.active {
		text-decoration: none;
	}
	nav {
		display: flex;
		align-items: center;
		justify-content: space-between;
		padding: 1rem 0;
	}
	nav a {
		padding: 1em 0.5em;
		color: var(--theme-header-text);
		border-bottom: 4px solid transparent;
		text-decoration: none;
		transition: var(--theme-transition);
	}
	nav a.active {
		text-decoration: none;
		border-bottom-color: var(--theme-accent);
	}
	.theme-toggle {
		display: flex;
		align-items: center;
	}

	/* Theme toggle button styles */
	#theme-toggle {
		background: none;
		border: none;
		padding: 0;
		cursor: pointer;
		display: flex;
		align-items: center;
		justify-content: center;
		width: 32px;
		height: 32px;
		border-radius: 50%;
		color: var(--theme-header-text);
		transition:
			color 0.2s ease,
			background-color 0.2s ease,
			box-shadow 0.3s ease;
	}
	#theme-toggle:hover {
		background-color: rgba(var(--gray), 10%);
		box-shadow: 0 0 calc(var(--glow-radius) / 3)
			calc(var(--glow-spread) / 3) var(--glow-color);
	}
	#theme-toggle:focus {
		outline: 2px solid var(--theme-accent);
		outline-offset: 2px;
	}
	.moon-icon {
		display: none;
	}
	.sun-icon {
		display: block;
	}
	html.dark .moon-icon {
		display: block;
	}
	html.dark .sun-icon {
		display: none;
	}
</style>
